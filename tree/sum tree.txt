class Solution
{
    public:
    pair<bool,int> sumtreefast( Node* root){
        if(root==NULL){
            pair<bool,int>p= make_pair(true,0);
            return p;
        }
        if(root->left==NULL && root->right==NULL){
             pair<bool,int>p= make_pair(true,root->data);
            return p;
        }
        
        pair<bool,int> suml= sumtreefast(root->left);
        pair<bool,int> sumr= sumtreefast(root->right);
        
        bool left= suml.first;
        bool right=sumr.first;
        
        bool con= root->data == suml.second + sumr.second;
        
        pair<bool,int>ans;
            
        
        if(left && right && con){
            ans.first=true;
            ans.second= root->data + suml.second + sumr.second;
        }
        else{
             ans.first=false;
        }
        
        return ans;
    
        
        
    }
    bool isSumTree(Node* root)
    {
         sumtreefast(root).first;
    }
};