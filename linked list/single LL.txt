#include<bits/stdc++.h>
using namespace std;

class Node{

	private:

	// abhi kuch kaam nahi hain mera

	public :

	int data;
	Node* next;

	Node (int data){
		this->data=data;
		this->next=NULL;
	}
	~Node(){
		// memory free
		if(this->next != NULL){
			delete next;
			this->next = NULL;
		}
	}
};

void insert_at_head(Node* &head, int d){

	Node *temp= new Node(d);
	temp->next=head;
	head=temp;
}

void insert_at_tail(Node* &tail,int d){

	Node *temp= new Node(d);
	tail->next=temp;
	tail=temp;
}

void insert_in_middle(Node* & head , Node* & tail , int position ,int d){

	if(position==1){
		insert_at_head(head,d);
		return;
	}

	Node*temp =head;
	int count=1;

	while(count < position-1){
		temp=temp->next;
		count++;
	}

	if (temp->next == NULL){
		insert_at_tail(tail,d);
		return;
	}

	Node* temp2 = new Node(d);

	temp2->next=temp->next;
	temp->next=temp2;	
}

void print( Node*& head){
    // traverse kar rahe hain hum
	Node* temp= head;

	while(temp!=NULL){
		cout<<temp->data<<" ";
		temp= temp->next;
	}

}

void deleteNode(Node* head,int position){

	if(position==1){
		Node * temp=head;
		head=head->next;
		temp->next=NULL;
		delete temp;
	}
	else{
		Node* curr=head;
		Node* prev=NULL;

		int count =1;

		while(count < position){
			prev=curr;
			curr=curr->next;
			count++;
		}

		prev->next=curr->next;
		curr->next=NULL;
		delete curr;

	}

}

 
int main(){
	
	Node* node1= new Node(10);

	Node* head= node1;
	Node* tail= node1;

	insert_at_head(head,20);
	insert_at_tail(tail,30);
	insert_in_middle(head,tail,2,90);
	deleteNode(head,3);

	print(head);

	return 0;
}
